==================================
libcbdetect C++ Demo
Version: 1.0.0
==================================
Processing image: data/04.png
Image loaded successfully (480x752)
Detection method: Template Matching (Fast)
Corner type: Saddle Point
Detecting chessboards...
Starting chessboard detection...
Starting multi-scale corner detection...

=== C++ Corner Detection Debug (scale=1) ===
Corner detection using template matching (fast)...
Non-maximum suppression parameters:
  - NMS radius: 3
  - NMS threshold: 0.025
  - NMS margin: 5
Extracted 630 corner candidates
Initial corner candidates from NMS: 630
After subpixel refinement: 630 corners (removed 0 invalid)
Scoring corners...
[Correlation Scoring] Scored 630 corners
Score statistics: min=0.0000, max=141.0286, mean=66.3204, median=75.4969
Score threshold: 0.0100
After score filter (threshold=0.0100): 582 corners (removed 48 below threshold)
Final corner detection result: 582 corners
Original scale (480x752): 582 corners

=== C++ Corner Detection Debug (scale=0.5000) ===
Corner detection using template matching (fast)...
Non-maximum suppression parameters:
  - NMS radius: 3
  - NMS threshold: 0.0250
  - NMS margin: 5
Extracted 246 corner candidates
Initial corner candidates from NMS: 246
After subpixel refinement: 246 corners (removed 0 invalid)
Scoring corners...
[Correlation Scoring] Scored 246 corners
Score statistics: min=0.0000, max=64.0699, mean=0.2615, median=0.0000
Score threshold: 0.0100
After score filter (threshold=0.0100): 5 corners (removed 241 below threshold)
Final corner detection result: 5 corners
Small scale (240x376): 5 corners

=== C++ Multi-scale Corner Merging Debug ===
Original scale corners: 582
Small scale corners: 5
Original scale first 5 corners:
  Corner 0: (263.00, 72.00), score=71.80
  Corner 1: (286.00, 73.00), score=48.36
  Corner 2: (292.00, 74.00), score=73.92
  Corner 3: (234.00, 75.00), score=119.66
  Corner 4: (304.00, 75.00), score=51.77
Added 2 corners from small scale
Total before zero crossing filter: 584
Merged corners first 10 coordinates (C++ 0-based):
  0: (263.00, 72.00)
  1: (286.00, 73.00)
  2: (292.00, 74.00)
  3: (234.00, 75.00)
  4: (304.00, 75.00)
  5: (152.00, 78.00)
  6: (138.00, 82.00)
  7: (187.00, 82.00)
  8: (264.00, 82.00)
  9: (275.00, 83.00)

=== C++ Zero Crossing Filter Debug ===
Input corners: 584
Filter parameters:
  - n_circle: 32
  - n_bin: 32
  - crossing_threshold: 3
  - need_crossings: 4
  - need_modes: 2
  - sample_radius_factor: 0.75
  Corner 0 at (263.00, 72.00): FAIL
  Corner 1 at (286.00, 73.00): FAIL
  Corner 2 at (292.00, 74.00): FAIL
  Corner 3 at (234.00, 75.00): FAIL
  Corner 4 at (304.00, 75.00): FAIL
  Corner 5 at (152.00, 78.00): FAIL
  Corner 6 at (138.00, 82.00): FAIL
  Corner 7 at (187.00, 82.00): FAIL
  Corner 8 at (264.00, 82.00): FAIL
  Corner 9 at (275.00, 83.00): FAIL
Filter results:
  - Passed: 7/584 (1.20%)
  - Failed due to boundary: 483
  - Failed due to other reasons: 94
MATLAB comparison:
  - MATLAB typically passes ~70-90% of corners
  - C++ passing 1.20% (should be higher)
WARNING: Very low pass rate suggests filter is too strict!
Suggested parameter adjustments:
  - Reduce crossing_threshold from 3 to 2
  - Reduce need_crossings from 4 to 3
  - Reduce need_modes from 2 to 1

Attempting relaxed filter with reduced strictness...
Relaxed parameters: crossing_threshold=2, need_crossings=3, need_modes=1
Relaxed filter results: 0/584 (0.00%)
Keeping original strict filter results
[Zero Crossing Filter] 7/584 corners passed filter (1.20%)
Multi-stage corner filtering:
  Initial corners: 7
  Score statistics:
    Mean: 74.15, Std: 15.56
    Median: 73.30
    95th percentile: 105.54
  After statistical filter: 7 (100.00%)
  After spatial filter (6px): 7 (100.00%)
  After top 3 filter: 3 (42.86%)
  WARNING: Filter rate 42.86% is higher than target 5-15%
           Consider more strict filtering parameters
Final corners after all filtering: 3
After merging: 3 corners
Found 3 corner candidates
Structure recovery with adaptive strictness:
  Energy thresholds: init=0.00, final=-6.00 (MATLAB/Sample standard)
  Max processing time: 30s
  1/3 (found: 0, energy_rej: 0, init_fail: 0)
  Attempting to initialize chessboard for seed 0
    initChessboard: Starting for seed 0, total corners: 3
    initChessboard: FAIL - insufficient corners or invalid seed (3 < 6 or seed 0 invalid)
  Seed 0 result: FAILED
  Attempting to initialize chessboard for seed 1
    initChessboard: Starting for seed 1, total corners: 3
    initChessboard: FAIL - insufficient corners or invalid seed (3 < 6 or seed 1 invalid)
  Seed 1 result: FAILED
  Attempting to initialize chessboard for seed 2
    initChessboard: Starting for seed 2, total corners: 3
    initChessboard: FAIL - insufficient corners or invalid seed (3 < 6 or seed 2 invalid)
  Seed 2 result: FAILED
Structure recovery completed:
  Processed: 3/3 corners
  Init failures: 3
  Energy rejected: 0 (thresholds: 0.00/-6.00)
  Found: 0 chessboards (sample target: 1)
  Time: 0 ms
  ANALYSIS: No chessboards found - need to further relax energy threshold
Reconstructed 0 chessboards
Detection completed in 176.39 ms
Starting multi-scale corner detection...

=== C++ Corner Detection Debug (scale=1.00) ===
Corner detection using template matching (fast)...
Non-maximum suppression parameters:
  - NMS radius: 3
  - NMS threshold: 0.03
  - NMS margin: 5
Extracted 630 corner candidates
Initial corner candidates from NMS: 630
After subpixel refinement: 630 corners (removed 0 invalid)
Scoring corners...
[Correlation Scoring] Scored 630 corners
Score statistics: min=0.0000, max=141.0286, mean=66.3204, median=75.4969
Score threshold: 0.0100
After score filter (threshold=0.0100): 582 corners (removed 48 below threshold)
Final corner detection result: 582 corners
Original scale (480x752): 582 corners

=== C++ Corner Detection Debug (scale=0.5000) ===
Corner detection using template matching (fast)...
Non-maximum suppression parameters:
  - NMS radius: 3
  - NMS threshold: 0.0250
  - NMS margin: 5
Extracted 246 corner candidates
Initial corner candidates from NMS: 246
After subpixel refinement: 246 corners (removed 0 invalid)
Scoring corners...
[Correlation Scoring] Scored 246 corners
Score statistics: min=0.0000, max=64.0699, mean=0.2615, median=0.0000
Score threshold: 0.0100
After score filter (threshold=0.0100): 5 corners (removed 241 below threshold)
Final corner detection result: 5 corners
Small scale (240x376): 5 corners

=== C++ Multi-scale Corner Merging Debug ===
Original scale corners: 582
Small scale corners: 5
Original scale first 5 corners:
  Corner 0: (263.00, 72.00), score=71.80
  Corner 1: (286.00, 73.00), score=48.36
  Corner 2: (292.00, 74.00), score=73.92
  Corner 3: (234.00, 75.00), score=119.66
  Corner 4: (304.00, 75.00), score=51.77
Added 2 corners from small scale
Total before zero crossing filter: 584
Merged corners first 10 coordinates (C++ 0-based):
  0: (263.00, 72.00)
  1: (286.00, 73.00)
  2: (292.00, 74.00)
  3: (234.00, 75.00)
  4: (304.00, 75.00)
  5: (152.00, 78.00)
  6: (138.00, 82.00)
  7: (187.00, 82.00)
  8: (264.00, 82.00)
  9: (275.00, 83.00)

=== C++ Zero Crossing Filter Debug ===
Input corners: 584
Filter parameters:
  - n_circle: 32
  - n_bin: 32
  - crossing_threshold: 3
  - need_crossings: 4
  - need_modes: 2
  - sample_radius_factor: 0.75
  Corner 0 at (263.00, 72.00): FAIL
  Corner 1 at (286.00, 73.00): FAIL
  Corner 2 at (292.00, 74.00): FAIL
  Corner 3 at (234.00, 75.00): FAIL
  Corner 4 at (304.00, 75.00): FAIL
  Corner 5 at (152.00, 78.00): FAIL
  Corner 6 at (138.00, 82.00): FAIL
  Corner 7 at (187.00, 82.00): FAIL
  Corner 8 at (264.00, 82.00): FAIL
  Corner 9 at (275.00, 83.00): FAIL
Filter results:
  - Passed: 7/584 (1.20%)
  - Failed due to boundary: 483
  - Failed due to other reasons: 94
MATLAB comparison:
  - MATLAB typically passes ~70-90% of corners
  - C++ passing 1.20% (should be higher)
WARNING: Very low pass rate suggests filter is too strict!
Suggested parameter adjustments:
  - Reduce crossing_threshold from 3 to 2
  - Reduce need_crossings from 4 to 3
  - Reduce need_modes from 2 to 1

Attempting relaxed filter with reduced strictness...
Relaxed parameters: crossing_threshold=2, need_crossings=3, need_modes=1
Relaxed filter results: 0/584 (0.00%)
Keeping original strict filter results
[Zero Crossing Filter] 7/584 corners passed filter (1.20%)
Multi-stage corner filtering:
  Initial corners: 7
  Score statistics:
    Mean: 74.15, Std: 15.56
    Median: 73.30
    95th percentile: 105.54
  After statistical filter: 7 (100.00%)
  After spatial filter (6px): 7 (100.00%)
  After top 3 filter: 3 (42.86%)
  WARNING: Filter rate 42.86% is higher than target 5-15%
           Consider more strict filtering parameters
Final corners after all filtering: 3
After merging: 3 corners
DEBUG: final corners (uv coords) [3]:
  0: (228.00,309.00)
  1: (161.00,330.00)
  2: (118.00,335.00)
Detected 3 corners
Detected 0 chessboards
Result saved to: result/04.png
Press any key to exit...
